{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Lending Club Rejected Loans Analysis\n",
    "### The data belongs to the 2013-2014 Period"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "%pylab inline\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "reject_raw = pd.read_csv('RejectStatsB.csv',low_memory=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Amount Requested</th>\n",
       "      <th>Application Date</th>\n",
       "      <th>Loan Title</th>\n",
       "      <th>Risk_Score</th>\n",
       "      <th>Debt-To-Income Ratio</th>\n",
       "      <th>Zip Code</th>\n",
       "      <th>State</th>\n",
       "      <th>Employment Length</th>\n",
       "      <th>Policy Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>30000.0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>debt_consolidation</td>\n",
       "      <td>754.0</td>\n",
       "      <td>32.01%</td>\n",
       "      <td>559xx</td>\n",
       "      <td>MN</td>\n",
       "      <td>&lt; 1 year</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15000.0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>medical</td>\n",
       "      <td>728.0</td>\n",
       "      <td>27.01%</td>\n",
       "      <td>945xx</td>\n",
       "      <td>CA</td>\n",
       "      <td>&lt; 1 year</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2500.0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>other</td>\n",
       "      <td>723.0</td>\n",
       "      <td>0.92%</td>\n",
       "      <td>190xx</td>\n",
       "      <td>PA</td>\n",
       "      <td>7 years</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4000.0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>car</td>\n",
       "      <td>563.0</td>\n",
       "      <td>24.92%</td>\n",
       "      <td>296xx</td>\n",
       "      <td>SC</td>\n",
       "      <td>&lt; 1 year</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22000.0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>debt_consolidation</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.91%</td>\n",
       "      <td>735xx</td>\n",
       "      <td>OK</td>\n",
       "      <td>&lt; 1 year</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Amount Requested Application Date          Loan Title  Risk_Score  \\\n",
       "0           30000.0       2013-01-01  debt_consolidation       754.0   \n",
       "1           15000.0       2013-01-01             medical       728.0   \n",
       "2            2500.0       2013-01-01               other       723.0   \n",
       "3            4000.0       2013-01-01                 car       563.0   \n",
       "4           22000.0       2013-01-01  debt_consolidation         0.0   \n",
       "\n",
       "  Debt-To-Income Ratio Zip Code State Employment Length  Policy Code  \n",
       "0               32.01%    559xx    MN          < 1 year            0  \n",
       "1               27.01%    945xx    CA          < 1 year            0  \n",
       "2                0.92%    190xx    PA           7 years            0  \n",
       "3               24.92%    296xx    SC          < 1 year            0  \n",
       "4               26.91%    735xx    OK          < 1 year            0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reject_raw.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2694642, 9)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reject_raw.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "< 1 year     2349255\n",
       "5 years       129732\n",
       "10+ years      74881\n",
       "2 years        18787\n",
       "3 years        16257\n",
       "1 year         15325\n",
       "4 years        11823\n",
       "6 years        10127\n",
       "7 years         9919\n",
       "8 years         8624\n",
       "9 years         6982\n",
       "Name: Employment Length, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# exploring the different \"Employment Length Values\" of the rejected loan applicants\n",
    "reject_raw['Employment Length'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Risk_Score           278345\n",
       "Zip Code                  1\n",
       "Employment Length     42930\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# exploring the columns with null values\n",
    "reject_raw.isnull().sum()[reject_raw.isnull().sum()>0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CA    336833\n",
       "TX    232665\n",
       "NY    217113\n",
       "FL    186403\n",
       "PA    111508\n",
       "OH     99150\n",
       "IL     98596\n",
       "GA     98414\n",
       "NC     87859\n",
       "NJ     85734\n",
       "VA     79421\n",
       "MI     72735\n",
       "MA     57142\n",
       "MD     56238\n",
       "TN     55556\n",
       "AZ     52335\n",
       "IN     50811\n",
       "AL     50228\n",
       "MO     49749\n",
       "WA     48968\n",
       "SC     46280\n",
       "CO     45008\n",
       "LA     43942\n",
       "WI     38179\n",
       "KY     35202\n",
       "CT     35070\n",
       "MN     34892\n",
       "NV     31934\n",
       "OK     29306\n",
       "AR     28350\n",
       "OR     26604\n",
       "KS     23519\n",
       "UT     18255\n",
       "HI     16618\n",
       "NM     16495\n",
       "WV     16349\n",
       "MS     14097\n",
       "NH     11336\n",
       "RI     10912\n",
       "DE      9421\n",
       "MT      7086\n",
       "AK      6441\n",
       "SD      5932\n",
       "DC      5500\n",
       "WY      5270\n",
       "VT      5136\n",
       "NE        24\n",
       "ME        16\n",
       "ND         9\n",
       "IA         1\n",
       "Name: State, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reject_raw['State'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "debt_consolidation                        1145576\n",
       "other                                      399152\n",
       "credit_card                                293420\n",
       "home_improvement                           125822\n",
       "car                                        102905\n",
       "moving                                      98359\n",
       "major_purchase                              83071\n",
       "medical                                     82582\n",
       "small_business                              79928\n",
       "Debt consolidation                          63023\n",
       "house                                       35797\n",
       "vacation                                    34243\n",
       "Business Loan                               33809\n",
       "Credit card refinancing                     26027\n",
       "Other                                        9042\n",
       "Home improvement                             8729\n",
       "Business                                     8014\n",
       "wedding                                      6243\n",
       "renewable_energy                             6190\n",
       "Major purchase                               3290\n",
       "Debt Consolidation                           2525\n",
       "Medical expenses                             2049\n",
       "Car financing                                1483\n",
       "Moving and relocation                        1356\n",
       "debt consolidation                           1255\n",
       "Vacation                                     1193\n",
       "Consolidation                                1070\n",
       "Home buying                                   833\n",
       "consolidation                                 637\n",
       "Home Improvement                              389\n",
       "                                           ...   \n",
       "Student Loan Repay                              1\n",
       "Refinancing for my future                       1\n",
       "I don't miss payments!                          1\n",
       "mail                                            1\n",
       "Debt Consolidation / Basement                   1\n",
       "credito                                         1\n",
       "Wedding Finance                                 1\n",
       "complete the car financing                      1\n",
       "Pilot School Debt                               1\n",
       "Debt Consolidation; Interest Deduction          1\n",
       "Education fund                                  1\n",
       "Debt Consule                                    1\n",
       "low risk consolidation loan                     1\n",
       "mobile fidelity                                 1\n",
       "The Last Debt!                                  1\n",
       "financial planning                              1\n",
       "creit consolidation                             1\n",
       "Pay off consumer debt                           1\n",
       "Toyota loan                                     1\n",
       "Help us get a decent home!                      1\n",
       "homeup                                          1\n",
       "Debt to Income Releaf                           1\n",
       "loan for new car                                1\n",
       "Home refinance to drop PMI                      1\n",
       "college rent                                    1\n",
       "E's Loan                                        1\n",
       "Saving some Interest                            1\n",
       "CREDIT CARD refinancing                         1\n",
       "Great Progress                                  1\n",
       "Debt consolidator                               1\n",
       "Name: Loan Title, Length: 16454, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The distribution of declined loan titles\n",
    "reject_raw['Loan Title'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    2.694642e+06\n",
       "mean     1.270815e+04\n",
       "std      1.253952e+04\n",
       "min      1.000000e+03\n",
       "25%      4.000000e+03\n",
       "50%      1.000000e+04\n",
       "75%      2.000000e+04\n",
       "max      1.400000e+06\n",
       "Name: Amount Requested, dtype: float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reject_raw['Amount Requested'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "reject_raw['Amount_Cat'] = pd.cut(reject_raw['Amount Requested'], bins=[0,1000,5000,10000,50000,10000000], labels=['<1000', '1000<x<5000', '5000<x<10000', '10000<x<50000','<50000'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10000<x<50000    1078337\n",
       "1000<x<5000       817440\n",
       "5000<x<10000      576461\n",
       "<1000             211622\n",
       "<50000             10782\n",
       "Name: Amount_Cat, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reject_raw['Amount_Cat'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Amount_Cat</th>\n",
       "      <th>Amount Requested</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>&lt;1000</td>\n",
       "      <td>211622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000&lt;x&lt;5000</td>\n",
       "      <td>817440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5000&lt;x&lt;10000</td>\n",
       "      <td>576461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10000&lt;x&lt;50000</td>\n",
       "      <td>1078337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>&lt;50000</td>\n",
       "      <td>10782</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Amount_Cat  Amount Requested\n",
       "0          <1000            211622\n",
       "1    1000<x<5000            817440\n",
       "2   5000<x<10000            576461\n",
       "3  10000<x<50000           1078337\n",
       "4         <50000             10782"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "amt_cat_count = reject_raw.groupby(by=\"Amount_Cat\")['Amount Requested'].count().reset_index()\n",
    "amt_cat_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(18,6))\n",
    "plt.bar(x=amt_cat_count['Amount_Cat'], height=amt_cat_count['Amount Requested'])\n",
    "plt.title('Distribution of rejected loan amounts')\n",
    "plt.xlabel('Requested Loan Amount')\n",
    "plt.ylabel('Frequency');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "pivot_1 = pd.pivot_table(reject_raw, values='Amount Requested', index=['Amount_Cat'], columns=['Employment Length'],aggfunc='size',fill_value=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Employment Length</th>\n",
       "      <th>1 year</th>\n",
       "      <th>10+ years</th>\n",
       "      <th>2 years</th>\n",
       "      <th>3 years</th>\n",
       "      <th>4 years</th>\n",
       "      <th>5 years</th>\n",
       "      <th>6 years</th>\n",
       "      <th>7 years</th>\n",
       "      <th>8 years</th>\n",
       "      <th>9 years</th>\n",
       "      <th>&lt; 1 year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Amount_Cat</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>&lt;1000</th>\n",
       "      <td>265</td>\n",
       "      <td>394</td>\n",
       "      <td>301</td>\n",
       "      <td>259</td>\n",
       "      <td>175</td>\n",
       "      <td>5491</td>\n",
       "      <td>127</td>\n",
       "      <td>110</td>\n",
       "      <td>99</td>\n",
       "      <td>248</td>\n",
       "      <td>202941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000&lt;x&lt;5000</th>\n",
       "      <td>3675</td>\n",
       "      <td>19742</td>\n",
       "      <td>3954</td>\n",
       "      <td>3118</td>\n",
       "      <td>2179</td>\n",
       "      <td>36939</td>\n",
       "      <td>1857</td>\n",
       "      <td>1634</td>\n",
       "      <td>1302</td>\n",
       "      <td>1420</td>\n",
       "      <td>732235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5000&lt;x&lt;10000</th>\n",
       "      <td>3658</td>\n",
       "      <td>15242</td>\n",
       "      <td>4328</td>\n",
       "      <td>3742</td>\n",
       "      <td>2810</td>\n",
       "      <td>31567</td>\n",
       "      <td>2342</td>\n",
       "      <td>2157</td>\n",
       "      <td>1838</td>\n",
       "      <td>1586</td>\n",
       "      <td>495784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10000&lt;x&lt;50000</th>\n",
       "      <td>7727</td>\n",
       "      <td>39502</td>\n",
       "      <td>10204</td>\n",
       "      <td>9137</td>\n",
       "      <td>6659</td>\n",
       "      <td>55735</td>\n",
       "      <td>5801</td>\n",
       "      <td>6018</td>\n",
       "      <td>5385</td>\n",
       "      <td>3727</td>\n",
       "      <td>907516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>&lt;50000</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>10779</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Employment Length  1 year  10+ years  2 years  3 years  4 years  5 years  \\\n",
       "Amount_Cat                                                                 \n",
       "<1000                 265        394      301      259      175     5491   \n",
       "1000<x<5000          3675      19742     3954     3118     2179    36939   \n",
       "5000<x<10000         3658      15242     4328     3742     2810    31567   \n",
       "10000<x<50000        7727      39502    10204     9137     6659    55735   \n",
       "<50000                  0          1        0        1        0        0   \n",
       "\n",
       "Employment Length  6 years  7 years  8 years  9 years  < 1 year  \n",
       "Amount_Cat                                                       \n",
       "<1000                  127      110       99      248    202941  \n",
       "1000<x<5000           1857     1634     1302     1420    732235  \n",
       "5000<x<10000          2342     2157     1838     1586    495784  \n",
       "10000<x<50000         5801     6018     5385     3727    907516  \n",
       "<50000                   0        0        0        1     10779  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pivot_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(18,6))\n",
    "plt.title('Heatmap of Amount Requested(in bins) vs. Employment History')\n",
    "sns.heatmap(pivot_1,annot=True, cmap='YlGnBu', fmt='g');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "greedy_one_yearers = reject_raw[(reject_raw['Employment Length']=='< 1 year') &\n",
    "                        (reject_raw['Amount_Cat']=='10000<x<50000')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Amount Requested', 'Application Date', 'Loan Title', 'Risk_Score',\n",
       "       'Debt-To-Income Ratio', 'Zip Code', 'State', 'Employment Length',\n",
       "       'Policy Code', 'Amount_Cat'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "greedy_one_yearers.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CA    113664\n",
       "TX     76563\n",
       "NY     73151\n",
       "FL     63088\n",
       "PA     36993\n",
       "IL     35113\n",
       "NJ     31521\n",
       "OH     31481\n",
       "GA     30812\n",
       "NC     27370\n",
       "VA     26376\n",
       "MI     24708\n",
       "WA     18824\n",
       "MA     18583\n",
       "MD     18266\n",
       "AZ     17939\n",
       "TN     17222\n",
       "CO     17188\n",
       "IN     16899\n",
       "MO     16188\n",
       "AL     14830\n",
       "SC     14180\n",
       "MN     13065\n",
       "LA     12744\n",
       "WI     12702\n",
       "CT     12233\n",
       "KY     11686\n",
       "NV     10779\n",
       "OK     10267\n",
       "AR      9836\n",
       "OR      9684\n",
       "KS      8346\n",
       "HI      7158\n",
       "UT      6927\n",
       "WV      6367\n",
       "NM      5888\n",
       "NH      4494\n",
       "MS      4137\n",
       "RI      3732\n",
       "MT      2935\n",
       "DE      2906\n",
       "AK      2612\n",
       "WY      2249\n",
       "SD      2207\n",
       "VT      2054\n",
       "DC      1536\n",
       "NE         6\n",
       "ND         4\n",
       "ME         2\n",
       "IA         1\n",
       "Name: State, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "greedy_one_yearers['State'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
